common-amq-conn-str = "tcp://local.dev.socrata.net:61616"

com.socrata.soda-fountain = {
  max-datum-size = 70000000
  upsert-ignore-extra-columns = false
  etag-obfuscation-key = null
  tableDropDelay = 15 days
  dataCleanupInterval = 1 hour
  request-header-size = 131072 #128K to accomodate datasets with a lot of columns

  service-advertisement {
    service-base-path = "/services"
    name = "soda-fountain"
    address = "local.dev.socrata.net"
  }

  database {
    app-name = "soda-fountain"
    host = "local.dev.socrata.net"
    port = 5432
    username = "blist"
    password = "blist"
    database = "sodafountain"
    c3p0 {
      maxPoolSize = 20
      idleConnectionTestPeriod = 60
      testConnectionOnCheckin = true
      preferredTestQuery = "SELECT 1"
      maxIdleTimeExcessConnections = 300
      maxStatementsPerConnection = 30
    }
  }

  network {
    port = 6010
    client {
      liveness {
        interval = 5s
        range = 5s
        missable = 2000000000
        port = 6012
      }
    }
  }

  curator {
    ensemble = ["local.dev.socrata.net:2181"]
    namespace = "com.socrata/soda"
    session-timeout = 40s
    connect-timeout = 5s
    base-retry-wait = 100ms
    max-retry-wait = 10s
    max-retries = 29
    service-base-path = "/services"
  }

  data-coordinator-client {
    service-name = "data-coordinator"
    instance = "alpha"
    connect-timeout = 1s
    receive-timeout = 24day # close to max int in ms
    instances-for-new-datasets = [ "alpha" ]
  }

  query-coordinator-client {
    service-name = "query-coordinator"
    connect-timeout = 1s
    receive-timeout = 600s
  }

  region-coder-client {
    service-name = "region-coder"
    connect-timeout = 5s
    read-timeout    = 5m
  }

  handlers {
    region-coder {
      service-name    = "region-coder"
      batch-size      = 200        # Number of rows to send to region-coder at once
      max-retries     = 1
      retry-wait      = 500ms
      connect-timeout = 5s
      read-timeout    = 5m
    }
  }

  metrics {
    # Should be unique for each service
    prefix = "com.socrata.soda.fountain"
    # log-metrics = true
    # enable-graphite = true
  }

  suggest {
    host = "local.dev.socrata.net"
    port = 8042
    connect-timeout = 1s
    receive-timeout = 5s
  }

#  message-producer {
#    raw-messaging {
#      producers = "activemq"
#      activemq.connection-string = ${common-amq-conn-str}
#      queue = "Metrics2012"
#    }
#  }

# Ex:
# metrics = {
#   activemq-connection-uri = "failover:(tcp://1.2.3.4:61616,tcp://1.2.3.5:61616,tcp://1.2.3.6:61616)"
#   jms-queue = "MyJMSQueue"
# }

  threadpool {
    min-threads = 10
    max-threads = 100
    idle-timeout = 300 s
    # Based on throughput of 50 req/sec * 5 seconds for recovery
    queue-length = 250
  }

  log4j {
    rootLogger = [ INFO, console ]
    appender {
      console.class = org.apache.log4j.ConsoleAppender
      console.props {
        layout.class = org.apache.log4j.PatternLayout
        layout.props {
          ConversionPattern = "%d %p [%X{X-Socrata-RequestId}] [%t] [%X{X-Socrata-Resource}] %c{1} %m%n"
        }
      }
    }
  }
}
